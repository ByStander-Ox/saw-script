let next_spec counter : CrucibleSetup () = do {
  n <- crucible_fresh_var "n" (llvm_int 32);
  crucible_ghost_value counter n;
  crucible_execute_func [];
  crucible_ghost_value counter {{n+1}};
  crucible_return (crucible_term {{n}});
};

let example_spec counter : CrucibleSetup () = do {
  n <- crucible_fresh_var "nm" (llvm_int 32);
  crucible_precond {{n < 2}};
  crucible_ghost_value counter n;
  crucible_execute_func [];
  crucible_ghost_value counter {{n+3}};
  crucible_return (crucible_term {{n+2}});
};

let main : TopLevel () = do {
    counter <- crucible_declare_ghost_state "ctr";

    load_crucible_llvm_module "simple.bc";
    next <- crucible_llvm_unsafe_assume_spec "next" (next_spec counter);
    crucible_llvm_verify "example" [next] false (example_spec counter)
                (do { print_goal; z3;} );
    print "done";
};

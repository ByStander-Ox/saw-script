# Change these for your platform
CLANG?=/usr/local/opt/llvm/bin/clang -emit-llvm -DFULL_UNROLL
LLVM_LINK?=/usr/local/opt/llvm/bin/llvm-link
SAW?=../../bin/saw
LSS?=../../bin/lss

OPENSSL_VERSION?=1.1.0g
SRCDIR=openssl-${OPENSSL_VERSION}
TARBALL=${SRCDIR}.tar.gz

CFLAGS=-I${SRCDIR}/include \
       -I${SRCDIR}/crypto/aes \
       -I../../deps/llvm-verifier/sym-api

all: aes_ref.aig

${TARBALL}:
	wget http://openssl.org/source/${TARBALL}

${SRCDIR}/Configure: ${TARBALL}
	tar -xzvf ${TARBALL}

# Notes on "Configure":
#   * The "darwin64" choice is arbitrary. Other platforms should work.
#   * The "debug" portion avoids optimization. This is critical because
#     we currently don't support some instructions generated by the
#     optimizing build.
#   * The "no-asm" bit is crucial because we can't currently analyze asm.
${SRCDIR}/Makefile: ${SRCDIR}/Configure
	(cd ${SRCDIR} && CC="${CLANG}" ./Configure debug-darwin64-x86_64-cc no-asm)

${SRCDIR}/crypto/aes/aes_core.o: ${SRCDIR}/Makefile
	(cd ${SRCDIR} && make CC="${CLANG}" include/openssl/opensslconf.h crypto/aes/aes_core.o)

aes_wrap.bc: aes_wrap.c ${SRCDIR}/crypto/aes/aes_core.o
	${CLANG} -c -emit-llvm ${CFLAGS} -o $@ $<

aes_all.bc: aes_wrap.bc ${SRCDIR}/crypto/aes/aes_core.o
	${LLVM_LINK} -o $@ $^

aes_imp.aig: aes_all.bc
	@echo "The next step may take about a minute."
	time ${LSS} $<

aes_ref.aig: aes_imp.aig aes.saw
	${SAW} aes.saw

clean:
	rm -rf ${SRCDIR}
	rm -f aes_wrap.bc aes_all.bc
	rm -f aes_imp.aig aes_ref.aig
